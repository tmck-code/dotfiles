" taken from github.com/tmck-code/dotfiles

" package manager
execute pathogen#infect()

" global variables to enable plugins
filetype plugin indent on

" very basic editor behaviour
set number    " line numbers
set expandtab " tabs -> spaces
set tabstop=2 " default 2 spaces for indentation
set nowrap    " no line wrapping by default
syntax on     " basic syntax highlighting
syntax enable " syntax recognition

" mouse behaviour
set mouse=a         " enable mouse
set ttymouse=xterm2 " make mouse work correctly

" autocompletions via built in engine
set omnifunc=syntaxcomplete#Complete " enable built-in engine
" Just select autocomplete option with return, don't also insert a newline
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
" Some better menu defaults
set completeopt+=longest,menuone,noinsert

" Detect file encoding and use utf8 if possible
if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
    endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  setglobal bomb
  set fileencodings=ucs-bom,utf-8,latin1
endif

" OSX specific settings -----------------------------------

" yank and paste with OSX clipboard
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard

  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif

" set vim as default editor for crontab files
if $VIM_CRONTAB == "true"
    set nobackup
    set nowritebackup
endif

" Language-specific settings --------------------

" Default indentations by file extension
autocmd FileType go setlocal autoindent noexpandtab tabstop=4 shiftwidth=4
autocmd FileType py setlocal autoindent expandtab   tabstop=4 shiftwidth=4
autocmd FileType rb setlocal autoindent expandtab   tabstop=2 shiftwidth=2
autocmd FileType sh setlocal autoindent expandtab   tabstop=2 shiftwidth=2

" Python settings
let g:pymode_python = 'python3'

" Shorctuts & key bindings -----------------------

" Move across panes with Cntrl+Shift+<arrow key>
map <C-S-left>  <C-W><left>
map <C-S-right> <C-W><right>
map <C-S-up>    <C-W><up>
map <C-S-down>  <C-W><down>

" Map Cntrl+N to toggle NERDTree on & off
map <C-N> :NERDTreeFocus<CR>
map <C-n> :NERDTreeToggle<CR>

" Map Cntrl+S to :w
vmap <C-s> :w<CR>

" Map tab to be autocomplete (Cntrl+N)
" if has("gui_running")
"     " C-Space seems to work under gVim on both Linux and win32
"     inoremap <C-Space> <C-n>
" else
"   if has("unix")
"     inoremap <Nul> <C-n>
"   endif
" endif

" Colours ----------------------------------------

colorscheme gruvbox
set background=dark " Dark style for theme

" ensure colours work correctly even in tmux
if &term =~ '256color'
    " disable Background Color Erase (BCE) so that color schemes
    " render properly when inside 256-color tmux and GNU screen.
    " see also http://snk.tuxfamily.org/log/vim-256color-bce.html
    set t_ut=
endif

set t_Co=256 " Enable heaps o' colours

" Set comments to appear in italics for all colorschemes
let g:quantum_italics = 1
let g:one_allow_italics = 1

" TODO: find out/remember what this magic is and why I need it
if has("termguicolors")
  set termguicolors
endif

" Plugin settings -------------------------------

" enable smart completion switcher
let g:mucomplete#enable_auto_at_startup = 1

" better-whitespace settings
let g:better_whitespace_enabled=1 " Enable syntax highlighting for trailing whitespace
let g:strip_whitespace_on_save=1  " Strip whitespace on save

" ctrlp settings
" speed up because it's slow af
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
" Open files in a new tab when selecting (pressing enter or clicking)
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<2-LeftMouse>'],
    \ 'AcceptSelection("t")': ['<cr>'],
    \ }

" Terraform settings
let g:terraform_align=1
let g:terraform_fold_sections=1
let g:terraform_remap_spacebar=1

" NERDTree settings
" open NERDTree by default
autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
syn match NERDTreeTxtFile #^\s\+.*txt$#
let g:NERDTreeLimitedSyntax = 1 " Only enable NerdTree syntax highlighting on common file types
" Set some colours
highlight NERDTreeTxtFile ctermbg=red ctermfg=magenta

" vim-better-whitespace settings -----------------
let g:better_whitespace_enabled=1
let g:strip_whitespace_on_save=1

" airline settings -------------------------------
" Disable editor mode in default bar (as this is displayed by airline)
set noshowmode

" Status bar and devicon settings
" These can be commented out in favour of non-nerd statusline symbols
let g:airline_theme='one'
" let g:airline_powerline_fonts = 1
let g:webdevicons_enable_airline_statusline = 1
let g:webdevicons_enable_airline_tabline = 1

" Searching options
let g:ctrlsf_position = 'bottom'
let g:ctrlsf_winsize = '30%'

