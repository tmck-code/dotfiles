#!/bin/bash

GRADIENT=(
   "\e[38;5;82m◼"
   "\e[38;5;154m◼"
   "\e[38;5;184m◼"
   "\e[38;5;172m◼"
   "\e[38;5;160m◼"
)

colour_reset="\e[0m"

MIN_TEMP=20  # approximate min ambient temperature
MAX_TEMP=100 # standard max threshold for CPU temps

function generate_gradient() {
  percentage=$[ $[ ${1} - ${MIN_TEMP} ] * 100 / $[ ${MAX_TEMP} - ${MIN_TEMP} ] ]
  index=$[ $[ ${percentage} + 5 ] / 20 ]

  echo -e "${GRADIENT[@]:0:index} [${percentage}%]" | sed 's/ //g'
}

function temp_core() {
  echo $(sensors | grep "Core ${1}" | sed 's/ \+/ /g' | cut -d ' ' -f 3 | sed 's/[^0-9.]//g' | cut -d '.' -f 1)
}

function report_core_temp() {
  echo -e "$(generate_gradient ${temp_core}) Core ${1}: ${temp_core}C ${colour_reset}"
}

function report_inline() {
  echo "$(temp_core 0)° / $(temp_core 1)°"
}

function report_termux() {
  printf "%0.1f°" "$(termux-battery-status | jq -r '.temperature')"
}

function report_core_temps() {
  cat <<EOF
$(report_core_temp 0)
$(report_core_temp 1)
EOF
}

if [ "${TERMUX:-}" == 1 ]; then
  report_termux
else
  report_inline
fi
