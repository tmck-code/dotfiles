#!/bin/bash

set -euo pipefail
[ -n "${DEBUG:-}" ] && set -x

function usage() {
  echo "Usage: $0 [switch|demo|random] [-n|--no-light]" >&2
}

declare -A theme_style_switch
theme_style_switch=([light]="dark" [dark]="light")

declare -A theme_styles
theme_styles=([light]=".light-theme" [dark]=".dark-theme")

CONFIG_DIR="$HOME/.config/alacritty"
THEME_DIR="$CONFIG_DIR/themes/themes"
CONFIG="$CONFIG_DIR/alacritty.toml"

THEME_DIR_PORTABLE="~/.config/alacritty/themes/themes"

function setTheme() {
  local theme_name="$1"

  local sed_expr="s|^  *\"$THEME_DIR_PORTABLE/.*.toml\"|    \"$THEME_DIR_PORTABLE/${theme_name}.toml\"|g"

  sed "$sed_expr" "$CONFIG" > /tmp/alacritty.toml
  mv /tmp/alacritty.toml "$CONFIG"
}

# switch between predefined light and dark themes
function switchStyle() {
  local current_style new_style new_theme

  # get the current theme style from ~/.config/alacritty/.current-theme-style file
  read -r current_style < "$CONFIG_DIR/.current-theme-style"
  new_style="${theme_style_switch[$current_style]}"
  read -r new_theme < "$CONFIG_DIR/${theme_styles[${new_style}]}"

  setTheme "$new_theme"

  echo "$new_style" > "$CONFIG_DIR/.current-theme-style"
}

function getAllThemes() {
  local style="${1:-all}"
  local grep_expr

  case "$style" in
    all)   grep_expr=".*" ;;
    dark)  grep_expr="-Ev '#[FEfe]'" ;;
    light) grep_expr="-E '#[FEfe]'" ;;
    *) echo "style not supported: '$1'" && exit 1 ;;
  esac

  for f in "$THEME_DIR"/*toml; do
    if grep -H -m1 background "$f" | grep $grep_expr > /dev/null 2>&1; then
      echo "$f"
    fi
  done
}

# cycle through all alacritty themes
function demo() {
  local idx=0
  local style="${1:-all}"
  local themes=( $(getAllThemes "$style") )

  [ -z "${themes:-}" ] && echo "no themes found!" && exit 1

  if which pokesay > /dev/null; then
    clear -x
    display-message -p "hello world" -o '' | pokesay -WujCb -c small
    echo '{"aasdf": "blkasdjfo", "ca;lksdjf": [3038274,52934,5.23894], "zzndkjshdf": null}' | jq
    echo
  fi

  local theme_name
  for theme in "${themes[@]}"; do
    theme_name=$(basename $theme .toml)
    setTheme "$theme_name"

    printf "\e[1m%s %s\e[0m\e[3m, %s\e[0m" \
      "[${idx}/${#themes[@]}]" "$theme_name" "press any key to continue..."

    read -n1 -s -r     # wait for a key press
    printf '\e[G\e[0K' # clear the line

    idx=$((idx + 1))
  done
}

# switch to a random theme
function random() {
  local style="${1:-all}"
  local themes=( $(getAllThemes "$style") )
  local random_theme=${themes[$RANDOM % ${#themes[@]}]}

  echo "Switching to random theme: $random_theme"
  setTheme "$(basename $random_theme .toml)"
}

op=switchStyle style=all
while test $# -gt 0; do
  case "${1}" in
    switch)        op=switchStyle;  shift ;;
    demo)          op=demo;         shift ;;
    random)        op=random;       shift ;;
    -s|--style)    shift; style="$1"; shift ;;
    *)
      echo "Wrong arg: $1" >&2; usage; exit 1 ;;
  esac
done

case "${op}" in
  switchStyle) switchStyle ;;
  demo)        demo "$style" ;;
  random)      random "$style" ;;
  *)           usage; exit 1 ;;
esac
