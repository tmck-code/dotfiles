#!/bin/bash

set -euo pipefail
[ -n "${DEBUG:-}" ] && set -x

function usage() {
  echo "Usage: $0 <file> [speed]" >&2
}

function scroll() {
  local delay="${1:-0.5}"
  local fpath="$2"
  clear -x

  head -n $(tput lines) "$fpath"

  local i=0
  while read -r; do
    echo "$REPLY" || echo # TODO: look into this ENV var and why it works
    sleep ${delay:-0.5}
    i=$((i+1))
  done < <(tail -n +$(tput lines) "$fpath")

  [[ $i -lt $(tput lines) ]] && sleep 20 || sleep 5
}

function scroll_all() {
  local delay="${1:-0.5}"
  local fpaths="${@:2}"

  while true; do
    for fpath in ${fpaths[@]}; do
      scroll "$delay" "$fpath"
    done
  done
}


fpaths=() delay=0.15
case "$1" in
  -s|--delay) shift; delay="$1"; shift ;;
  -h|--help)  usage; exit 0 ;;
esac
fpaths="${@:2}"

if [[ "${#fpaths[@]}" -gt 0 ]]; then scroll_all "$delay" "$fpaths"
else echo "No file specified" >&2; usage; exit 1
fi
